public class DZ {
    public static void main(String[] args) {

        /* 1) Создать программу, выводящую на экран ближайшее к 10 из двух чисел,
         записанных в переменные m и n. Например, среди чисел 8.5 и 11.45 ближайшее к десяти 11.45.
        */

//        float m = 5.55f;
//        float m1;
//               m1 =  m - 10;
//        float n = 13.8f;
//        float n1;
//               n1 = n - 10;
//
//        if ( Math.abs(m1) < Math.abs(n1) ){
//            System.out.println(m);
//        } else {
//            System.out.println(n);
//        }

        /*  2) В три переменные a, b и c записаны три вещественных числа.
          Создать программу, которая будет находить и выводить на экран
          вещественные корни квадратного уравнения ax²+bx+c=0,
          либо сообщать, что корней нет.
           */

//        double a = 1.25;
//        double b = 2.2;
//        double c = 3.15;
//        double x, x1, x2;
//        double d = b * b - 4 * a * c;
//        System.out.println(d);
//
//        if ( d < 0){
//            System.out.println("Корней нет!");
//        }else if ( d == 0){
//            x = (b * -1) / (2 * a);
//            System.out.println(x);
//        }else if ( d > 0){
//            x1 = ((b * -1) + Math.sqrt(d)) / 2 * a;
//            x2 = ((b * -1) - Math.sqrt(d)) / 2 * a;
//            System.out.println(x1);
//            System.out.println(x2);
//        }

        /*3) Создать программу, выводящую на экран
         наибольшую цифру любого трехзначного натурального числа.
          */

//        int a = 618;
//        int b, c, d;
//
//        b = a / 100;
//        c = (a - b * 100 ) / 10;
//        d = ((a - b * 100) - c * 10 );
//
//        if ( b > c ) {
//            if ( b > d){
//                System.out.println(b);
//            }else   {
//                System.out.println(d);
//            }
//        } else if ( c > d ){
//            System.out.println(c);
//        }else   {
//            System.out.println(d);
//        }
        /*4) В три переменные a, b и c явно записаны программистом
        три целых попарно неравных между собой числа.
        Создать программу, которая переставит числа в переменных таким образом,
         чтобы при выводе на экран последовательность a, b и c
         оказалась строго возрастающей.
         */
//        int x = 10;
//        int y = -40;
//        int z = 5;
//
//        if ( x > y ) {
//            if (x > z) {
//                if ( y > z){
//                    System.out.println(z + ", " + y + ", " + x);
//                }else {
//                    System.out.println(y + ", " + z + ", " + x);
//                }
//            }else {
//                System.out.println(y + ", " + x + ", " + z);
//            }
//        }else if ( y > z ){
//            if ( x > z ){
//                System.out.println(z + ", " + x + ", " + y);
//            }else {
//                System.out.println(x + ", " + z + ", " + y);
//            }
//        }else {
//            System.out.println(x + ", " + y + ", " + z);
//        }

        //Циклы
        /*1) Создайте программу, выводящую на экран все
        четырёхзначные числа последовательности 1000 1003 1006 1009 1012 1015 ….
         */

//        for ( int i = 1000; i < 10000; i += 3 ){
//            System.out.println(i);
//        }

        /*2) Создайте программу, выводящую на экран все
        неотрицательные элементы последовательности 90 85 80 75 70 65 60 ….
         */

//        for ( int g = 90; g >= 0 ; g -= 5 ){
//            System.out.println(g);
//        }

        /*3) Создайте программу, выводящую на экран
        первые 20 элементов последовательности 2 4 8 16 32 64 128 ….
         */

//        int p = 2;
//        for (int k = 1; k <= 20; k++ ){
//            System.out.println(p);
//            p = p * 2;
//        }

        /*4) Проверьте,  является ли  натуральное число — простым.
         */

//        int n = 127;
//        for ( int i = 2; i < n ; i++){
//            if ( n % i == 0){
//                System.out.println(n + " является составным числом.");
//                break;
//            }
//            if (i == n - 1){
//                System.out.println(n + " является простым числом.");
//            }
//        }








    }
}
